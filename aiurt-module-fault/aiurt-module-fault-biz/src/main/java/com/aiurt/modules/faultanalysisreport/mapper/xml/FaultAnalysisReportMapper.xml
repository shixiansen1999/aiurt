<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiurt.modules.faultanalysisreport.mapper.FaultAnalysisReportMapper">

<select id="readAll" resultType="com.aiurt.modules.faultanalysisreport.entity.FaultAnalysisReport">
    select
    a.*
    from
    (( SELECT
            ahp.PROC_INST_ID_ as process_instance_id,
            ara.ID_           as task_id,
            ara.NAME_         as task_name,
            arp.KEY_          as model_key,
            far.id,
            far.status,
            f.`code` as faultCode ,
            f.fault_phenomenon,
            far.symptoms,
            far.solution,
            ft.name,
            far.create_by,
            f.id as faultId,
            ft.`code` as faultTypeCode,
            far.create_time as createTime,
            f.sub_system_code,
            far.fault_analysis,
            far.file_path
    FROM
            fault_analysis_report far
                    LEFT JOIN fault f ON f.CODE = far.fault_code
                    LEFT JOIN fault_type ft on ft.`code` = f.fault_type_code
                    Left JOIN act_hi_procinst ahp ON ahp.BUSINESS_KEY_ = far.id
                    LEFT join act_ru_task ara ON ara.PROC_INST_ID_ = ahp.PROC_INST_ID_
                    LEFT JOIN act_re_procdef arp on ahp.PROC_DEF_ID_ = arp.ID_
    WHERE
            far.del_flag = 0
            and far.status = 1
    )
    union
    ( SELECT
            ahp.PROC_INST_ID_ as process_instance_id,
            ara.ID_           as task_id,
            ara.NAME_         as task_name,
            arp.KEY_          as model_key,
            far.id,
            far.STATUS,
            f.`code` AS faultCode,
            f.fault_phenomenon,
            far.symptoms,
            far.solution,
            ft.NAME,
            far.create_by,
            f.id AS faultId,
            ft.`code` as faultTypeCode,
            far.create_time as createTime,
            f.sub_system_code,
            far.fault_analysis,
            far.file_path
    FROM
            fault_analysis_report far
                    LEFT JOIN fault f ON f.CODE = far.fault_code
                    LEFT JOIN fault_type ft on ft.`code` = f.fault_type_code
                    Left JOIN act_hi_procinst ahp ON ahp.BUSINESS_KEY_ = far.id
                    LEFT join act_ru_task ara ON ara.PROC_INST_ID_ = ahp.PROC_INST_ID_
                    LEFT JOIN act_re_procdef arp on ahp.PROC_DEF_ID_ = arp.ID_
    WHERE
            far.del_flag = 0
            and far.status in (2,0)
            and (far.create_by = #{userName}
            or (ara.ASSIGNEE_ = #{userName} OR ara.ID_ in (
            SELECT TASK_ID_
            FROM act_ru_identitylink ari
            WHERE ari.TYPE_ = 'candidate'
            AND ari.USER_ID_ = #{userName}
            AND ari.TASK_ID_ = ara.ID_
            AND (ara.assignee_ = '' or ara.assignee_ is null)
            )))
    ))a
    where 1=1
        <if test="condition.faultCode != null and condition.faultCode != ''">
            and a.faultCode LIKE concat('%',#{condition.faultCode},'%')
        </if>
        <if test="condition.faultPhenomenon != null and condition.faultPhenomenon != ''">
            and a.fault_phenomenon LIKE concat('%',#{condition.faultPhenomenon}',%')
        </if>
        <if test="condition.faultTypeCode != null and condition.faultTypeCode != ''">
            and a.faultTypeCode like concat('%',#{condition.faultTypeCode},'%')
        </if>
        <if test="condition.startTime != null and condition.endTime != null ">
            and DATE_FORMAT(a.createTime ,'%Y-%m-%d') &gt;= DATE_FORMAT(#{condition.startTime},'%Y-%m-%d')
            and DATE_FORMAT(a.createTime ,'%Y-%m-%d') &lt;= DATE_FORMAT(#{condition.endTime},'%Y-%m-%d')
        </if>

        ORDER BY a.createTime DESC
</select>

<select id="getDetail" resultType="com.aiurt.modules.faultanalysisreport.dto.FaultDTO">
    SELECT
    f.id,
    f.`code`,
    f.major_code,
    f.sub_system_code,
    f.fault_applicant,
    (select group_concat(device_code) from fault_device where fault_code = f.`code`) as deviceCode,
    ( select group_concat(d.name) from
    (select device_code from fault_device where fault_code = f.`code`) a
    left join device d on d.`code` = a.device_code) as deviceName,
    f.line_code,
    f.station_code,
    f.station_position_code,
    f.fault_phenomenon,
    f.happen_time,
    frr.fault_analysis,
    f.appoint_user_name,
    frr.maintenance_measures as solution,
    frr.symptoms,
    frr.method
    FROM
    fault f
    left join fault_repair_record frr on frr.fault_code =  f.`code`
    where frr.del_flag = 0 and f.id = #{id}
    </select>

<select id="readOne" resultType="com.aiurt.modules.faultanalysisreport.entity.FaultAnalysisReport">
    SELECT
            far.id,
            far.status,
            far.fault_analysis,
            far.solution,
            far.file_path,
            ft.name,
            far.fault_knowledge_base_id
    FROM
            fault_analysis_report far
                    LEFT JOIN fault f ON f.CODE = far.fault_code
                    LEFT JOIN fault_type ft on ft.`code` = f.fault_type_code
    WHERE
    1=1
    <if test="id != null and id != ''">
        and  far.id = #{id}
    </if>
    <if test="faultCode != null and faultCode != ''">
        and  far.fault_code = #{faultCode}
    </if>
    </select>

<select id="getFaultCode" resultType="java.lang.String">
    select fault_code from fault_analysis_report where del_flag = 0
    </select>
</mapper>
