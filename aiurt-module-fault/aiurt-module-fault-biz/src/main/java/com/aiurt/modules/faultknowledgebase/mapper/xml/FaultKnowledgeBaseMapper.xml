<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiurt.modules.faultknowledgebase.mapper.FaultKnowledgeBaseMapper">
    <select id="readAll" resultType="com.aiurt.modules.faultknowledgebase.entity.FaultKnowledgeBase">
        select a.*
        from
        ((SELECT
        ahp.PROC_INST_ID_ as process_instance_id,
        ara.ID_           as task_id,
        ara.NAME_         as task_name,
        arp.KEY_          as model_key,
        fkb.id,
        fkb.device_type_code,
        fkb.knowledge_base_type_code,
        fkb.material_code,
        fkb.fault_codes,
        fkb.fault_phenomenon,
        fkb.create_by,
        fkb.fault_reason,
        fkb.method,
        fkb.solution,
        fkb.create_time,
        fkb.major_code,
        fkb.system_code,
        fkb.file_path,
        fkb.approved_remark,
        fkb.status,
        fkb.del_flag,
        fkb.tools,
        fkb.fault_level_code,
        fkb.fault_phenomenon_code
        FROM fault_knowledge_base fkb
        left join sys_user su on su.username = fkb.create_by
        Left JOIN act_hi_procinst ahp ON ahp.BUSINESS_KEY_ = fkb.id
        LEFT join act_ru_task ara ON ara.PROC_INST_ID_ = ahp.PROC_INST_ID_
        LEFT JOIN act_re_procdef arp on ahp.PROC_DEF_ID_ = arp.ID_
        WHERE fkb.del_flag = 0
        )

        union

        (SELECT
        ahp.PROC_INST_ID_ as process_instance_id,
        ara.ID_           as task_id,
        ara.NAME_         as task_name,
        arp.KEY_          as model_key,
        fkb.id,
        fkb.device_type_code,
        fkb.knowledge_base_type_code,
        fkb.material_code,
        fkb.fault_codes,
        fkb.fault_phenomenon,
        fkb.create_by,
        fkb.fault_reason,
        fkb.method,
        fkb.solution,
        fkb.create_time,
        fkb.major_code,
        fkb.system_code,
        fkb.file_path,
        fkb.approved_remark,
        fkb.status,
        fkb.del_flag,
        fkb.tools,
        fkb.fault_level_code,
        fkb.fault_phenomenon_code
        FROM fault_knowledge_base fkb
        left join sys_user su on su.username = fkb.create_by
        Left JOIN act_hi_procinst ahp ON ahp.BUSINESS_KEY_ = fkb.id
        LEFT join act_ru_task ara ON ara.PROC_INST_ID_ = ahp.PROC_INST_ID_
        LEFT JOIN act_re_procdef arp on ahp.PROC_DEF_ID_ = arp.ID_
        WHERE fkb.del_flag = 0
        and fkb.status = 0
        <if test="condition.createBy!=null and condition.createBy!=''">
            and fkb.create_by =#{condition.createBy}
        </if>
        )

        union

        (SELECT
        ahp.PROC_INST_ID_ as process_instance_id,
        ara.ID_           as task_id,
        ara.NAME_         as task_name,
        arp.KEY_          as model_key,
        fkb.id,
        fkb.device_type_code,
        fkb.knowledge_base_type_code,
        fkb.material_code,
        fkb.fault_codes,
        fkb.fault_phenomenon,
        fkb.create_by,
        fkb.fault_reason,
        fkb.method,
        fkb.solution,
        fkb.create_time,
        fkb.major_code,
        fkb.system_code,
        fkb.file_path,
        fkb.approved_remark,
        fkb.status,
        fkb.del_flag,
        fkb.tools,
        fkb.fault_level_code,
        fkb.fault_phenomenon_code
        FROM fault_knowledge_base fkb
        left join sys_user su on su.username = fkb.create_by
        Left JOIN act_hi_procinst ahp ON ahp.BUSINESS_KEY_ = fkb.id
        LEFT join act_ru_task ara ON ara.PROC_INST_ID_ = ahp.PROC_INST_ID_
        LEFT JOIN act_re_procdef arp on ahp.PROC_DEF_ID_ = arp.ID_
        WHERE fkb.del_flag = 0
        and fkb.status = 0
        <if test="condition.createBy!=null and condition.createBy!=''">
            and fkb.create_by =#{condition.createBy}
        </if>
        or (ara.ASSIGNEE_ = #{userName} OR ara.ID_ in (
        SELECT TASK_ID_
        FROM act_ru_identitylink ari
        WHERE ari.TYPE_ = 'candidate'
        AND ari.USER_ID_ = #{userName}
        AND ari.TASK_ID_ = ara.ID_
        AND (ara.assignee_ = '' or ara.assignee_ is null)
        ))
        )
        ) a
        where
            a.del_flag = 0
        <if test="condition.id!=null and condition.id!=''">
              and a.id =#{condition.id}
        </if>
        <if test="condition.deviceTypeCode != null and condition.deviceTypeCode !='' ">
            and a.device_type_code =#{condition.deviceTypeCode}
        </if>
        <if test="condition.materialCode != null and condition.materialCode !='' ">
            and a.material_code =#{condition.materialCode}
        </if>
        <if test="condition.faultPhenomenon != null and condition.faultPhenomenon != ''">
            and a.fault_phenomenon like concat('%',#{condition.faultPhenomenon},'%')
        </if>
        <if test="condition.faultReason != null and condition.faultReason != ''">
            and a.fault_reason like concat('%',#{condition.faultReason},'%')
        </if>
        <if test="condition.solution != null and condition.solution != ''">
            and a.solution like concat('%',#{condition.solution},'%')
        </if>
        <if test="condition.method != null and condition.method != ''">
            and a.method like concat('%',#{condition.method},'%')
        </if>
        <if test="condition.matchName != null and  condition.matchName != ''">
            AND (
                (
                    ( a.fault_phenomenon LIKE CONCAT ('%', #{condition.matchName}, '%'))
                    or
                    (a.device_type_code in (select `code` from device_type where name LIKE CONCAT ('%', #{condition.matchName}, '%')))
                    or
                    (a.major_code in (select  material_code  from device_assembly where material_name LIKE CONCAT ('%', #{condition.matchName}, '%')))
                )
            )
        </if>
        <if test="condition.majorCode != null and  condition.majorCode != ''">
            and a.major_code= #{condition.majorCode}
        </if>
        <if test="condition.systemCode != null and  condition.systemCode != ''">
            and a.system_code= #{condition.systemCode}
        </if>
        <if test="condition.knowledgeBaseTypeCode != null and  condition.knowledgeBaseTypeCode != ''">
            and a.knowledge_base_type_code = #{condition.knowledgeBaseTypeCode}
        </if>
        <if test="condition.faultPhenomenonCode != null and  condition.faultPhenomenonCode != ''">
            and a.fault_phenomenon_code like concat('%',#{condition.faultPhenomenonCode},'%')
        </if>
        ORDER BY a.create_time DESC
    </select>

    <select id="queryAll" resultType="com.aiurt.modules.faultknowledgebase.entity.FaultKnowledgeBase">
        select a.*
        from
        ((SELECT
        ahp.PROC_INST_ID_ as process_instance_id,
        ara.ID_           as task_id,
        ara.NAME_         as task_name,
        arp.KEY_          as model_key,
        fkb.id,
        fkb.device_type_code,
        (SELECT name from device_type WHERE `code` = fkb.device_type_code) as deviceTypeName,
        fkb.knowledge_base_type_code,
        fkb.material_code,
        (SELECT material_name from device_assembly WHERE material_code = fkb.material_code group by material_code) as materialName,
        fkb.fault_codes,
        fkb.fault_phenomenon,
        fkb.create_by,
        fkb.fault_reason,
        fkb.method,
        fkb.solution,
        fkb.create_time,
        fkb.major_code,
        fkb.system_code,
        fkb.file_path,
        fkb.approved_remark,
        fkb.status,
        fkb.del_flag,
        fkb.tools
        FROM fault_knowledge_base fkb
        left join sys_user su on su.username = fkb.create_by
        Left JOIN act_hi_procinst ahp ON ahp.BUSINESS_KEY_ = fkb.id
        LEFT join act_ru_task ara ON ara.PROC_INST_ID_ = ahp.PROC_INST_ID_
        LEFT JOIN act_re_procdef arp on ahp.PROC_DEF_ID_ = arp.ID_
        WHERE fkb.del_flag = 0
        )

        union

        (SELECT
        ahp.PROC_INST_ID_ as process_instance_id,
        ara.ID_           as task_id,
        ara.NAME_         as task_name,
        arp.KEY_          as model_key,
        fkb.id,
        fkb.device_type_code,
        (SELECT name from device_type WHERE `code` = fkb.device_type_code) as deviceTypeName,
        fkb.knowledge_base_type_code,
        fkb.material_code,
        (SELECT material_name from device_assembly WHERE material_code = fkb.material_code group by material_code) as materialName,
        fkb.fault_codes,
        fkb.fault_phenomenon,
        fkb.create_by,
        fkb.fault_reason,
        fkb.method,
        fkb.solution,
        fkb.create_time,
        fkb.major_code,
        fkb.system_code,
        fkb.file_path,
        fkb.approved_remark,
        fkb.status,
        fkb.del_flag,
        fkb.tools
        FROM fault_knowledge_base fkb
        left join sys_user su on su.username = fkb.create_by
        Left JOIN act_hi_procinst ahp ON ahp.BUSINESS_KEY_ = fkb.id
        LEFT join act_ru_task ara ON ara.PROC_INST_ID_ = ahp.PROC_INST_ID_
        LEFT JOIN act_re_procdef arp on ahp.PROC_DEF_ID_ = arp.ID_
        WHERE fkb.del_flag = 0
        and fkb.status = 0
        <if test="condition.createBy!=null and condition.createBy!=''">
            and fkb.create_by =#{condition.createBy}
        </if>
        )

        union

        (SELECT
        ahp.PROC_INST_ID_ as process_instance_id,
        ara.ID_           as task_id,
        ara.NAME_         as task_name,
        arp.KEY_          as model_key,
        fkb.id,
        fkb.device_type_code,
        (SELECT name from device_type WHERE `code` = fkb.device_type_code) as deviceTypeName,
        fkb.knowledge_base_type_code,
        fkb.material_code,
        (SELECT material_name from device_assembly WHERE material_code = fkb.material_code group by material_code) as materialName,
        fkb.fault_codes,
        fkb.fault_phenomenon,
        fkb.create_by,
        fkb.fault_reason,
        fkb.method,
        fkb.solution,
        fkb.create_time,
        fkb.major_code,
        fkb.system_code,
        fkb.file_path,
        fkb.approved_remark,
        fkb.status,
        fkb.del_flag,
        fkb.tools
        FROM fault_knowledge_base fkb
        left join sys_user su on su.username = fkb.create_by
        Left JOIN act_hi_procinst ahp ON ahp.BUSINESS_KEY_ = fkb.id
        LEFT join act_ru_task ara ON ara.PROC_INST_ID_ = ahp.PROC_INST_ID_
        LEFT JOIN act_re_procdef arp on ahp.PROC_DEF_ID_ = arp.ID_
        WHERE fkb.del_flag = 0
        and fkb.status = 0
        <if test="condition.createBy!=null and condition.createBy!=''">
            and fkb.create_by =#{condition.createBy}
        </if>
        or (ara.ASSIGNEE_ = #{userName} OR ara.ID_ in (
        SELECT TASK_ID_
        FROM act_ru_identitylink ari
        WHERE ari.TYPE_ = 'candidate'
        AND ari.USER_ID_ = #{userName}
        AND ari.TASK_ID_ = ara.ID_
        AND (ara.assignee_ = '' or ara.assignee_ is null)
        ))
        )
        ) a
        where
        a.del_flag = 0
        <if test="condition.id!=null and condition.id!=''">
            and a.id =#{condition.id}
        </if>
        <if test="condition.deviceTypeCode != null and condition.deviceTypeCode !='' ">
            and a.device_type_code =#{condition.deviceTypeCode}
        </if>
        <if test="condition.materialCode != null and condition.materialCode !='' ">
            and a.material_code =#{condition.materialCode}
        </if>
        <if test="condition.faultPhenomenon != null and condition.faultPhenomenon != ''">
            and a.fault_phenomenon like concat('%',#{condition.faultPhenomenon},'%')
        </if>
        <if test="condition.faultReason != null and condition.faultReason != ''">
            and a.fault_reason like concat('%',#{condition.faultReason},'%')
        </if>
        <if test="condition.solution != null and condition.solution != ''">
            and a.solution like concat('%',#{condition.solution},'%')
        </if>
        <if test="condition.method != null and condition.method != ''">
            and a.method like concat('%',#{condition.method},'%')
        </if>
        <if test="condition.matchName != null and  condition.matchName != ''">
            AND (
            ( a.fault_phenomenon LIKE CONCAT ('%', #{condition.matchName}, '%'))
            or (a.deviceTypeName LIKE CONCAT  ('%', #{condition.matchName}, '%'))
            or (a.materialName LIKE CONCAT ('%', #{condition.matchName}, '%'))
            )
        </if>
        <if test="condition.majorCode != null and  condition.majorCode != ''">
            and a.major_code= #{condition.majorCode}
        </if>
        <if test="condition.systemCode != null and  condition.systemCode != ''">
            and a.system_code= #{condition.systemCode}
        </if>
        <if test="condition.knowledgeBaseTypeCode != null and  condition.knowledgeBaseTypeCode != ''">
            and a.knowledge_base_type_code = #{condition.knowledgeBaseTypeCode}
        </if>
        ORDER BY a.create_time DESC
    </select>

<select id="readOne" resultType="com.aiurt.modules.faultknowledgebase.entity.FaultKnowledgeBase">
    SELECT
            fkb.id,
            fkb.device_type_code,
            fkb.knowledge_base_type_code,
            fkb.material_code,
            fkb.fault_codes,
            fkb.fault_phenomenon,
            fkb.fault_reason,
            fkb.method,
            fkb.solution,
            fkb.create_time,
            fkb.status,
            fkb.file_path,
            fkb.tools,
            fkb.fault_phenomenon_code,
            fkb.major_code,
            fkb.system_code,
            fkb.fault_level_code,
            (SELECT name from device_type WHERE `code` = fkb.device_type_code and del_flag = 0) as deviceTypeName,
            (SELECT material_name from device_assembly WHERE material_code = fkb.material_code group by material_code) as materialName
    FROM
            fault_knowledge_base fkb WHERE del_flag = 0 and fkb.id = #{id}

    </select>

<select id="getDeviceAssembly" resultType="com.aiurt.modules.faultknowledgebase.dto.DeviceAssemblyDTO">
    select id,material_code,material_name,device_type_code from device_assembly where  del_flag = 0
    <if test="deviceTypeCode != null and deviceTypeCode != ''">
        and device_type_code =#{deviceTypeCode}
    </if>
    group by material_code
    </select>

<select id="getAllDeviceAssembly" resultType="com.aiurt.modules.faultknowledgebase.dto.DeviceAssemblyDTO">
    select id,material_code,material_name,device_type_code from device_assembly where  del_flag = 0
    <if test="collect != null and collect.size() != 0">
        and device_type_code in
        <foreach collection="collect" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </if>
    group by material_code
    </select>

<select id="getNum" resultType="int">
    select count(f.knowledge_id) from fault_knowledge_base fkb
    left join fault f on fkb.id = f.knowledge_id
    where fkb.id = #{id}
    </select>

    <select id="getDeviceCodeByName" resultType="com.aiurt.modules.device.entity.DeviceType">
        SELECT
        dt.*
        FROM
        device_type dt
        where
            dt.del_flag = 0
        <if test="deviceTypeName!=null">
            and dt.name = #{deviceTypeName} limit 1
        </if>
    </select>

    <select id="getDeviceAssemblyCode" resultType="com.aiurt.modules.faultknowledgebase.dto.DeviceAssemblyDTO">
        SELECT
        da.material_code as materialCode
        FROM
        device_assembly da
        where
            da.del_flag = 0
        <if test="deviceAssemblyName!=null">
            and da.material_name = #{deviceAssemblyName} limit 1
        </if>
    </select>

    <select id="querySymptomTemplate" resultType="com.aiurt.modules.faultknowledgebase.dto.SymptomResDTO">
        select
        t1.id,
        t1.major_code,
        t1.system_code,
        t1.knowledge_base_type_code,
        t1.device_type_code,
        t1.fault_level_code,
        t1.material_code,
        t1.fault_phenomenon,
        t2.name as material_name,
        t3.base_type_name,
        t1.create_time
        from fault_knowledge_base t1
        Left join material_base t2 ON (t1.material_code = t2.code and t2.del_flag = 0)
        Left join material_base_type t3 ON (t2.base_type_code = t3.base_type_code and t3.del_flag = 0)
        where t1.del_flag = 0
        <if test="condition.majorCode != null and condition.majorCode != ''">
            and t1.major_code = #{condition.majorCode}
        </if>
        <if test="condition.systemCode != null and condition.systemCode != ''">
            and t1.system_code = #{condition.systemCode}
        </if>
        <if test="condition.deviceTypeCode != null and condition.deviceTypeCode != ''">
            and t1.device_type_code = #{condition.deviceTypeCode}
        </if>
        <if test="condition.faultLevelCode != null and condition.faultLevelCode != ''">
            and t1.fault_level_code = #{condition.faultLevelCode}
        </if>
        <if test="condition.materialCode != null and condition.materialCode != ''">
            and t1.material_code = #{condition.materialCode}
        </if>
        <if test="condition.faultPhenomenon != null and condition.faultPhenomenon != ''">
            and t1.fault_phenomenon = #{condition.faultPhenomenon}
        </if>
        order by t1.major_code, t1.system_code , t1.device_type_code, t1.material_code , t1.fault_level_code
    </select>

    <select id="countFaultCauseByIdSet" resultType="com.aiurt.modules.faultknowledgebase.dto.AnalyzeFaultCauseResDTO">
        SELECT
                count(t1.id) num,
                t1.id,
                t1.fault_cause,
                t1.knowledge_base_id
        FROM
                fault_cause_solution t1
        LEFT JOIN fault_cause_usage_records t2 ON ( t1.id = t2.fault_cause_solution_id AND t2.del_flag = 0 )
        WHERE
                EXISTS (SELECT 1 FROM fault_knowledge_base WHERE 1=1 and id IN
                        <foreach collection="idList" item="item" separator="," open="(" close=")" >
                            #{item}
                        </foreach>
                        AND id = t1.knowledge_base_id)
        GROUP BY
                t1.id
    </select>

    <select id="synchrodata" resultType="com.aiurt.modules.knowledge.entity.KnowledgeBase">
        select fkb.id                    id,
               fkb.fault_phenomenon_code faultPhenomenonCode,
               fkb.fault_phenomenon      faultPhenomenon,
               fkb.major_code            majorCode,
               cm.major_name             majorName,
               fkb.system_code           systemCode,
               cs.system_name            systemName,
               fkb.material_code         materialCode,
               dc.material_name          materialName,
               fkb.device_type_code      deviceTypeCode,
               dt.name                   deviceTypeName,
               fkb.fault_level_code      faultLevelCode,
               fkb.scan_num              scanNum,
               fkb.create_time           createTime
        from fault_knowledge_base fkb
                 left join device_compose dc on (fkb.material_code = dc.material_code and dc.del_flag = 0)
                 left join cs_major cm on (fkb.major_code = cm.major_code and cm.del_flag = 0)
                 left join cs_subsystem cs on (fkb.system_code = cs.system_code and cs.del_flag = 0)
                 left join device_type dt on (fkb.device_type_code = dt.code and dt.del_flag = 0)
        where fkb.del_flag = 0
    </select>
</mapper>
