<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiurt.modules.faultknowledgebase.mapper.FaultKnowledgeBaseMapper">

<select id="readAll" resultType="com.aiurt.modules.faultknowledgebase.entity.FaultKnowledgeBase">
    select a.*,
    ahp.PROC_INST_ID_ as process_instance_id,
    ara.ID_           as task_id,
    ara.NAME_         as task_name,
    arp.KEY_          as model_key
    from
        ((SELECT
        fkb.id,
        fkb.device_type_code,
        (SELECT name from device_type WHERE `code` = fkb.device_type_code) as deviceTypeName,
        fkb.knowledge_base_type_code,
        fkb.material_code,
        (SELECT material_name from device_assembly WHERE material_code = fkb.material_code group by material_code) as materialName,
        fkb.fault_codes,
        fkb.fault_phenomenon,
        fkb.create_by,
        fkb.fault_reason,
        fkb.method,
        fkb.solution,
        fkb.create_time,
        fkb.major_code,
        fkb.system_code,
        fkb.file_path,
        fkb.approved_remark,
        fkb.status,
        fkb.tools
        FROM
        fault_knowledge_base fkb WHERE del_flag = 0 and fkb.approved_result = 0
        <if test="condition.approvedResult != null">
            and fkb.approved_result =#{condition.approvedResult}
        </if>
        <if test="condition.createBy != null and condition.createBy != ''">
            and fkb.create_by = #{condition.createBy}
        </if>)

        union all

        (SELECT
        fkb.id,
        fkb.device_type_code,
        (SELECT name from device_type WHERE `code` = fkb.device_type_code) as deviceTypeName,
        fkb.knowledge_base_type_code,
        fkb.material_code,
        (SELECT material_name from device_assembly WHERE material_code = fkb.material_code group by material_code) as materialName,
        fkb.fault_codes,
        fkb.fault_phenomenon,
        fkb.create_by,
        fkb.fault_reason,
        fkb.method,
        fkb.solution,
        fkb.create_time,
        fkb.major_code,
        fkb.system_code,
        fkb.file_path,
        fkb.approved_remark,
        fkb.status,
        fkb.tools
        FROM
        fault_knowledge_base fkb WHERE del_flag = 0 and fkb.approved_result = 1
        <if test="condition.approvedResult != null">
            and fkb.approved_result =#{condition.approvedResult}
        </if>)
        ) a
        left join sys_user su on su.username = a.create_by
        Left JOIN act_hi_procinst ahp ON ahp.BUSINESS_KEY_ = a.id
        LEFT join act_ru_task ara ON ara.PROC_INST_ID_ = ahp.PROC_INST_ID_
        LEFT JOIN act_re_procdef arp on ahp.PROC_DEF_ID_ = arp.ID_
        where
             ahp.ID_ is not null
            <if test="condition.id!=null and condition.id!=''">
                and a.id =#{condition.id}
            </if>
            <if test="condition.deviceTypeCode != null and condition.deviceTypeCode !='' ">
                and a.device_type_code =#{condition.deviceTypeCode}
            </if>
            <if test="condition.materialCode != null and condition.materialCode !='' ">
                and a.material_code =#{condition.materialCode}
            </if>
            <if test="condition.faultPhenomenon != null and condition.faultPhenomenon != ''">
                and a.fault_phenomenon like concat('%',#{condition.faultPhenomenon},'%')
            </if>
            <if test="condition.faultReason != null and condition.faultReason != ''">
                and a.fault_reason like concat('%',#{condition.faultReason},'%')
            </if>
            <if test="condition.solution != null and condition.solution != ''">
                and a.solution like concat('%',#{condition.solution},'%')
            </if>
            <if test="condition.method != null and condition.method != ''">
                and a.method like concat('%',#{condition.method},'%')
            </if>
            <if test="ids != null and ids.size() != 0">
                and a.id in
                <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="condition.matchName != null and  condition.matchName != ''">
                AND (
                ( a.fault_phenomenon LIKE CONCAT ('%', #{condition.matchName}, '%'))
                or (a.deviceTypeName LIKE CONCAT  ('%', #{condition.matchName}, '%'))
                or (a.materialName LIKE CONCAT ('%', #{condition.matchName}, '%'))
                )
            </if>
            <if test="condition.majorCode != null and  condition.majorCode != ''">
                and a.major_code= #{condition.majorCode}
            </if>
            <if test="condition.systemCode != null and  condition.systemCode != ''">
                and a.system_code= #{condition.systemCode}
            </if>
            <if test="condition.knowledgeBaseTypeCode != null and  condition.knowledgeBaseTypeCode != ''">
                and a.knowledge_base_type_code = #{condition.knowledgeBaseTypeCode}
            </if>
    ORDER BY a.create_time DESC
    </select>

<select id="readOne" resultType="com.aiurt.modules.faultknowledgebase.entity.FaultKnowledgeBase">
    SELECT
            fkb.id,
            fkb.device_type_code,
            fkb.knowledge_base_type_code,
            fkb.material_code,
            fkb.fault_codes,
            fkb.fault_phenomenon,
            fkb.fault_reason,
            fkb.method,
            fkb.solution,
            fkb.create_time,
            fkb.status,
            fkb.file_path,
            fkb.tools,
            (SELECT name from device_type WHERE `code` = fkb.device_type_code) as deviceTypeName,
            (SELECT material_name from device_assembly WHERE material_code = fkb.material_code group by material_code) as materialName
    FROM
            fault_knowledge_base fkb WHERE del_flag = 0 and fkb.id = #{id}

    </select>

<select id="getDeviceAssembly" resultType="com.aiurt.modules.faultknowledgebase.dto.DeviceAssemblyDTO">
    select id,material_code,material_name,device_type_code from device_assembly where  del_flag = 0
    <if test="deviceTypeCode != null and deviceTypeCode != ''">
        and device_type_code =#{deviceTypeCode}
    </if>
    group by material_code
    </select>

<select id="getAllDeviceAssembly" resultType="com.aiurt.modules.faultknowledgebase.dto.DeviceAssemblyDTO">
    select id,material_code,material_name,device_type_code from device_assembly where  del_flag = 0
    <if test="collect != null and collect.size() != 0">
        and device_type_code in
        <foreach collection="collect" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </if>
    group by material_code
    </select>

<select id="getNum" resultType="int">
    select count(f.knowledge_id) from fault_knowledge_base fkb
    left join fault f on fkb.id = f.knowledge_id
    where fkb.id = #{id}
    </select>

    <select id="getDeviceCodeByName" resultType="com.aiurt.modules.device.entity.DeviceType">
        SELECT
        dt.*
        FROM
        device_type dt
        where
        <if test="deviceTypeName!=null">
            dt.name = #{deviceTypeName} limit 1
        </if>
    </select>

    <select id="getDeviceAssemblyCode" resultType="com.aiurt.modules.faultknowledgebase.dto.DeviceAssemblyDTO">
        SELECT
        da.code as materialCode
        FROM
        device_assembly da
        where
        <if test="deviceAssemblyName!=null">
            da.material_name = #{deviceAssemblyName} limit 1
        </if>
    </select>
</mapper>