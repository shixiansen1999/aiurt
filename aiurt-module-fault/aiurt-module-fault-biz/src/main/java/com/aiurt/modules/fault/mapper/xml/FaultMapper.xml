<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiurt.modules.fault.mapper.FaultMapper">
    <select id="selectByCode" parameterType="java.lang.String" resultType="com.aiurt.modules.fault.entity.Fault">
        select f.*,fkbt.name as  phenomenonTypeName
        from fault f
        LEFT JOIN fault_knowledge_base_type fkbt on f.fault_phenomenon = fkbt.code
        where f.code = #{code}
    </select>

    <select id="queryCsWorkByMajorCode" parameterType="java.lang.String"
            resultType="com.aiurt.modules.basic.entity.CsWork">
        select *
        from cs_work where 1 = 1
        <if test="majorCode != null and majorCode != ''">
            and major_code = #{majorCode}
        </if>
    </select>

    <select id="queryKnowledge" parameterType="com.aiurt.modules.faultknowledgebase.entity.FaultKnowledgeBase"
            resultType="java.lang.String">
        SELECT id
        FROM fault_knowledge_base
                WHERE 1 = 1 and del_flag = 0 and status = 1
        <if test="matchName != null and matchName != ''">
            and MATCH (
                              `fault_phenomenon`,
                              `fault_reason`,
                              `solution`
                              ) AGAINST (#{matchName} IN BOOLEAN MODE)
        </if>
        <if test="faultPhenomenon != null and faultPhenomenon != ''">
            and fault_phenomenon like concat('%'
              , #{faultPhenomenon}
              , '%')
        </if>

        <if test="majorCode != null and majorCode != ''">
            and major_code = #{majorCode}
        </if>
        <if test="systemCode != null and systemCode != ''">
            and system_code = #{systemCode}
        </if>
        <if test="knowledgeBaseTypeCode != null and knowledgeBaseTypeCode != ''">
        and knowledge_base_type_code = #{knowledgeBaseTypeCode}
        </if>
        <if test="deviceCodeList != null and deviceCodeList.size() != 0">
            and device_type_code in (
            select device.device_type_code  from device where code in
                <foreach collection="deviceCodeList" item="item" close=")" open="(" separator=",">
                    #{item}
                </foreach>
            )
        </if>
    </select>

    <select id="pageList" resultType="com.aiurt.modules.faultknowledgebase.entity.FaultKnowledgeBase">
        select *,
                MATCH (
                `fault_phenomenon`,
                `fault_reason`,
                `solution`
                ) AGAINST (
               #{condition.matchName} IN BOOLEAN MODE) as scode
        from
                fault_knowledge_base
                WHERE 1=1
                  and  del_flag = 0
                  and status = 1
        <if test="condition.matchName != null and condition.matchName != ''">
            and MATCH (
                    `fault_phenomenon`
              ,
                    `fault_reason`
              ,
                    `solution`
                    ) AGAINST (#{condition.matchName} IN BOOLEAN MODE)
        </if>
        <if test="condition.faultPhenomenon != null and condition.faultPhenomenon != ''">
            and fault_phenomenon like concat('%'
              , #{condition.faultPhenomenon}
              , '%')
        </if>
        <if test="condition.majorCode != null and condition.majorCode != ''">
            and major_code = #{condition.majorCode}
        </if>
        <if test="condition.systemCode != null and condition.systemCode != ''">
            and system_code = #{condition.systemCode}
        </if>
        <if test="condition.lineCode != null and condition.lineCode != ''">
            and line_code = #{condition.lineCode}
        </if>
        <if test="condition.method != null and condition.method != ''">
            and method like concat('%'
              , #{condition.method}
              , '%')
        </if>

        <if test="condition.faultReason != null and condition.faultReason != ''">
            and fault_reason like concat('%'
              , #{condition.faultReason}
              , '%')
        </if>

        <if test="condition.solution != null and condition.solution != ''">
            and solution like concat('%'
              , #{condition.solution}
              , '%')
        </if>
        <if test="condition.idList != null and condition.idList.size() > 0">
            and id in
            <foreach collection="condition.idList" item="item" close=")" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="condition.deviceCodeList != null and condition.deviceCodeList.size() != 0">
            and device_type_code in (
            select device.device_type_code  from device where code in
            <foreach collection="condition.deviceCodeList" item="item" close=")" open="(" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="condition.deviceTypeCode != null and condition.deviceTypeCode != ''">
            and device_type_code = #{condition.deviceTypeCode}
        </if>
        <if test="condition.knowledgeBaseTypeCode != null and condition.knowledgeBaseTypeCode != ''">
            and knowledge_base_type_code = #{condition.knowledgeBaseTypeCode}
        </if>
    </select>

    <select id="selectBySubSystemCode" resultType="com.aiurt.modules.fault.dto.FaultFrequencyDTO">
        SELECT f.sub_system_code as subSystemCode,cs.shortened_form,
               count(*) AS number
        FROM fault f
        left join cs_subsystem cs on cs.system_code = f.sub_system_code
        <where>
            1 = 1
            <if test="startDate != null">
                and DATE_FORMAT(f.happen_time, '%Y-%m-%d') &gt;= DATE_FORMAT(#{startDate}, '%Y-%m-%d')
            </if>
            <if test="endDate != null">
                and  DATE_FORMAT(f.happen_time, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endDate}, '%Y-%m-%d')
            </if>
        </where>
        GROUP BY f.sub_system_code
    </select>

    <select id="translateMajors" resultType="java.lang.String">
        select major_name
        from cs_major
        <where>
            <if test="codeList.size() > 0">
                major_code in
                <foreach item="item" collection="codeList" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <select id="translateSubsystems" resultType="java.lang.String">
        select system_name
        from cs_subsystem
        <where>
            <if test="codeList.size() > 0">
                system_code in
                <foreach item="item" collection="codeList" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
    <select id="getStationName" resultType="java.lang.String">
        select CONCAT(cs.line_name, '/', cs.station_name) as lineStationName
        from cs_station cs
        where cs.station_code = #{stationCode}
        and cs.del_flag = 0
    </select>
    <select id="getStatusName" resultType="java.lang.String">
        select sdt.item_text
        from sys_dict_item sdt
                     LEFT JOIN sys_dict sd on sd.id = sdt.dict_id
        where sd.dict_code = 'fault_status'
          and sdt.item_value = #{status}
    </select>

    <select id="selectUserNameByComplex" resultType="java.lang.String">
        SELECT DISTINCT su.username
        FROM sys_user_role sur
        JOIN sys_user su ON sur.user_id = su.id
        JOIN sys_role sr ON sur.role_id = sr.id
        LEFT join  cs_user_major cum ON  cum.user_id = su.id
        LEFT JOIN  cs_major cm ON  cum.major_id = cm.id
        LEFT JOIN  cs_user_subsystem cus on cus.user_id = su.id
        LEFT JOIN  cs_subsystem cs ON  cs.id = cus.system_id
        LEFT JOIN  cs_user_station us on us.user_id =  su.id
        LEFT JOIN  cs_station c on us.station_id =  c.id
        where  su.del_flag = 0
        <if test="roleCodeList != null and roleCodeList.size() != 0 ">
            and sr.role_code in
            <foreach collection="roleCodeList" open="(" close=")" separator="," item="code">
                #{code}
            </foreach>
        </if>

        <if test="majorCode != null and majorCode != ''">
            and cm.major_code = #{majorCode}
        </if>

        <if test="subSystemCode != null and subSystemCode != ''">
            and cs.system_code = #{subSystemCode}
        </if>

        <if test="stationCode != null and stationCode != ''">
            and c.station_code = #{stationCode}
        </if>
        <if test="sysOrgCode != null and sysOrgCode != ''">
            and su.org_code = #{sysOrgCode}
        </if>
    </select>

    <select id="getFault" resultType="com.aiurt.modules.faultanalysisreport.dto.FaultDTO">
        SELECT
        fault.id,
        fault.`code`,
        fault.major_code,
        fault.fault_mode_code,
        fault.sub_system_code,
        fault.line_code,
        fault.station_code,
        fault.fault_applicant,
        fault.happen_time,
        fault.station_position_code,
        <!--(select group_concat(fd.device_code) from fault_device fd where fd.fault_code = fault.`code`) as deviceCode,
        ( select group_concat(d.name) from
        (select fd.device_code from fault_device fd where fd.fault_code = fault.`code`) a
        left join device d on d.`code` = a.device_code ) as deviceName,-->
        fault.end_time,
        fault.create_time,
        fault.hang_up_reason,
        fault.fault_phenomenon,
        fault.symptoms
        FROM
        fault fault
        <!--left join fault_device fd on fault.`code` = fd.fault_code
        left join device de on de.`code` = fd.device_code-->
        <where>
          <!--  fault.major_code = de.major_code
        and fault.sub_system_code = de.system_code-->
        and fault.status = 12
        <if test="condition.code != null and condition.code != ''">
            and fault.`code` like concat('%',#{condition.code},'%')
        </if>
        <if test="condition.faultModeCode != null and condition.faultModeCode != ''">
            and fault.fault_mode_code = #{condition.faultModeCode}
        </if>
        <if test="condition.stationCode != null and condition.stationCode != ''">
            and (fault.station_code = #{condition.stationCode}
            or fault.line_code =#{condition.stationCode}
            or fault.station_position_code =#{condition.stationCode})
        </if>
        <if test="condition.deviceCode != null and condition.deviceCode != ''">
            and fault.`code` in ((select fd.fault_code from fault_device fd where fd.device_code like concat('%',#{condition.deviceCode},'%')))
        </if>
        <if test="condition.majorCode != null  and condition.majorCode !=''">
            and fault.major_code =#{condition.majorCode}
        </if>
        <if test="condition.subSystemCode != null  and condition.subSystemCode !=''">
            and fault.sub_system_code =#{condition.subSystemCode}
        </if>
        <if test="faultCodes != null and faultCodes.size() != 0">
            and  fault.`code` not in
            <foreach collection="faultCodes" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        </where>
        group by  fault.id
    </select>

    <select id="getDeviceName" resultType="java.lang.String">
    select d.name
    from fault_device fd
    left join device d on d.`code` = fd.device_code
    where fd.fault_code = #{code}
    </select>

    <select id="queryForSendMessage" resultType="com.aiurt.modules.fault.dto.FaultForSendMessageDTO">
        SELECT
            f.code,
            f.status,
            r.appoint_user_name,
            r.recevice_time
        FROM
            fault f
                LEFT JOIN fault_repair_record r ON f.`code` = r.fault_code
        WHERE
            r.del_flag = 0
            AND r.recevice_time IS NOT NULL
            <if test="code != null and code != ''">
                AND f.code = #{code}
            </if>
            <if test="status != null">
                AND f.status = #{status}
            </if>
            <if test="updateTime != null">
                AND f.update_time = #{updateTime}
            </if>
    </select>
</mapper>
