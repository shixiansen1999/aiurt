
package com.aiurt.modules.robot.taskdata.wsdl;

import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * gSOAP 2.8.16 generated service definition
 *
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "Service", targetNamespace = "http://tempuri.org/taskdata.xsd/Service.wsdl", wsdlLocation = "file:/D:/\u9489\u9489\u6587\u4ef6/\u673a\u5668\u4eba\u5bf9\u63a5/\u7b2c\u4e09\u65b9\u5382\u5bb6\u53c2\u7167WSDL\u6587\u4ef6\u5f00\u53d1/taskdata.wsdl")
public class Service
    extends javax.xml.ws.Service
{

    private final static URL SERVICE_WSDL_LOCATION;
    private final static WebServiceException SERVICE_EXCEPTION;
    private final static QName SERVICE_QNAME = new QName("http://tempuri.org/taskdata.xsd/Service.wsdl", "Service");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/\u9489\u9489\u6587\u4ef6/\u673a\u5668\u4eba\u5bf9\u63a5/\u7b2c\u4e09\u65b9\u5382\u5bb6\u53c2\u7167WSDL\u6587\u4ef6\u5f00\u53d1/taskdata.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SERVICE_WSDL_LOCATION = url;
        SERVICE_EXCEPTION = e;
    }

    public Service() {
        super(__getWsdlLocation(), SERVICE_QNAME);
    }

    public Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), SERVICE_QNAME, features);
    }

    public Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE_QNAME);
    }

    public Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE_QNAME, features);
    }

    public Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ServicePortType
     */
    @WebEndpoint(name = "Service")
    public ServicePortType getService() {
        return super.getPort(new QName("http://tempuri.org/taskdata.xsd/Service.wsdl", "Service"), ServicePortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServicePortType
     */
    @WebEndpoint(name = "Service")
    public ServicePortType getService(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/taskdata.xsd/Service.wsdl", "Service"), ServicePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SERVICE_EXCEPTION!= null) {
            throw SERVICE_EXCEPTION;
        }
        return SERVICE_WSDL_LOCATION;
    }

}
