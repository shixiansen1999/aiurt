<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiurt.modules.system.mapper.CsUserSubsystemMapper">

<select id="getSubsystemIds" resultType="java.lang.String">
    select system_id from cs_user_subsystem where user_id = #{userId}
    </select>

<select id="getSubsystemByUserId" resultType="org.jeecg.common.system.vo.CsUserSubsystemModel">
    select cus.id ,cus.user_id,cus.system_id,cs.system_code ,cs.system_name ,cs.major_code,cm.id as majorId
    from cs_user_subsystem cus
    left join cs_subsystem cs on cs.id = cus.system_id
    LEFT JOIN cs_major cm on cs.major_code = cm.major_code
    where cs.del_flag = 0 and cm.del_flag = 0

    <if test="id != null and id != ''">
        and cus.user_id = #{id}
    </if>
</select>
    <select id="selectByUserId" resultType="com.aiurt.modules.subsystem.dto.SubsystemFaultDTO">
    select  s.system_code,s.system_name,s.id from cs_user_subsystem csu
    left join cs_subsystem s on csu.system_id = s.id
    where  s.del_flag =0 and csu.user_id = #{id}
    </select>
    <select id="getSubsystemFaultDTO" resultType="com.aiurt.modules.subsystem.dto.SubsystemFaultDTO">
    SELECT
    COUNT(fa.id and fl.weight >=8 or not null) as seriousFaultNum,
    COUNT(fa.id and (fl.weight &lt;= 7 or fa.fault_level is null) or not null) as commonFaultNum,
    IFNULL(SUM(fa.fault_duration),0)  as num
    FROM cs_subsystem ss
    LEFT JOIN fault fa on fa.sub_system_code = ss.system_code
    LEFT JOIN fault_level fl on fa.fault_level = fl.`code` and fl.del_flag = 0
    WHERE
    ss.del_flag =0
    AND ss.system_code = #{subsystemCode}
    AND date_format(fa.happen_time ,'%Y-%m') = date_format( #{time},'%Y-%m')
    AND fa.status>2
    </select>

    <select id="getSubsystemByDeviceType" resultType="com.aiurt.modules.subsystem.dto.SubsystemFaultDTO">
        SELECT

        COUNT(fa.id and fl.weight >=8 or not null) as seriousFaultNum,
        COUNT(fa.id and (fl.weight &lt;= 7 or fa.fault_level is null) or not null ) as commonFaultNum
        FROM   fault fa
        LEFT JOIN fault_device fd on  fd.fault_code =fa.`code`
        LEFT JOIN  device de on fd.device_code = de.`code`
        LEFT JOIN fault_level fl on fa.fault_level = fl.`code`
        WHERE
        fd.del_flag =0   and fl.del_flag = 0
        AND fa.sub_system_code = #{subsystemCode}
        and de.device_type_code = #{deviceTypeCode}
        AND date_format(fa.happen_time ,'%Y-%m') = date_format( #{time},'%Y-%m')
    </select>
    <select id="getNum" resultType="java.lang.Integer">
       select IFNULL(sum(aa.num),0)  from
        (SELECT IFNULL(SUM(fa.fault_duration),0)   as num
         FROM  device de
         LEFT JOIN fault_device fd on de.`code` = fd.device_code
         LEFT JOIN fault fa on  fd.fault_code =fa.`code`
        WHERE
            fd.del_flag =0
          AND fa.sub_system_code = #{subsystemCode}
          and de.device_type_code = #{deviceTypeCode}
          AND date_format(fa.approval_pass_time ,'%Y-%m') = date_format( #{time},'%Y-%m')
        group by fa.id) aa
    </select>
    <select id="getYearNumFault" resultType="com.aiurt.modules.subsystem.dto.YearFaultDTO">
        select a.system_name as name,a.system_code as code, a.id,
        COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='01' or not NULL ) as january,
        COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='02' or not NULL ) as  february,
        COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='03' or not NULL ) as march,
        COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='04' or not NULL ) as april,
        COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='05' or not NULL ) as may,
        COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='06' or not NULL ) as june,
        COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='07' or not NULL ) as july,
        COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='08' or not NULL ) as august,
        COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='09' or not NULL ) as september,
        COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='10' or not NULL ) as october,
        COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='11' or not NULL ) as november,
        COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='12' or not NULL ) as december
        FROM cs_subsystem a
        LEFT JOIN fault c ON a.system_code = c.sub_system_code
        and c.`status` >2  AND DATE_FORMAT(c.happen_time, '%Y-%m-%d') >= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -11 YEAR_MONTH), '%Y-%m-01')
        WHERE a.del_flag=0
        AND a.id in(select system_id from cs_user_subsystem where user_id = #{id})
        GROUP BY  a.system_name
    </select>
    <select id="getDeviceTypeYearFault" resultType="com.aiurt.modules.subsystem.dto.YearFaultDTO">
        select
            COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='01' or not NULL ) as january,
            COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='02' or not NULL ) as  february,
            COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='03' or not NULL ) as march,
            COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='04' or not NULL ) as april,
            COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='05' or not NULL ) as may,
            COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='06' or not NULL ) as june,
            COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='07' or not NULL ) as july,
            COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='08' or not NULL ) as august,
            COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='09' or not NULL ) as september,
            COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='10' or not NULL ) as october,
            COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='11' or not NULL ) as november,
            COUNT(c.id and  DATE_FORMAT(c.happen_time, '%m') ='12' or not NULL ) as december
        FROM  fault c
                  LEFT JOIN fault_device fd on fd.fault_code = c.`code` and fd.del_flag = 0
                  LEFT JOIN device d on d.`code` =fd.device_code and d.del_flag =0
        WHERE
            c.`status` >2  AND DATE_FORMAT(c.happen_time, '%Y-%m-%d') >= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -11 YEAR_MONTH), '%Y-%m-01')
          AND c.sub_system_code = #{code}
          and d.device_type_code = #{deviceTypeCode}

    </select>
    <select id="getSubsystemByDeviceTypeCode" resultType="com.aiurt.modules.subsystem.dto.SubsystemFaultDTO">
        select code as deviceTypeCode,name as deviceTypeName,id from device_type
        where del_flag = 0
        <if test="deviceTypeCode != null ">
            and code in
            <foreach collection="deviceTypeCode" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="deviceTypeCode == null ">
            and system_code = #{subsystemCode}
        </if>
    </select>
    <select id="sysTemYearFault" resultType="com.aiurt.modules.subsystem.dto.ListDTO">
        SELECT
            a.system_name AS NAME,
            a.system_code AS CODE,
            IFNULL(SUM(c.fault_duration),0)  as num,
            date_format(c.happen_time, '%c') MONTH
        FROM
            cs_subsystem a
                LEFT JOIN fault c ON a.system_code = c.sub_system_code and c.hang_up_time is null
                AND c.`status` > 2
                AND DATE_FORMAT(c.happen_time, '%Y-%m-%d') >= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -11 YEAR_MONTH), '%Y-%m-01')
        WHERE
            a.del_flag = 0
          <!--and not EXISTS (select 1 from operation_process where fault_code = c.code and  process_code = 10)-->
         and  a.system_code = #{code}
        GROUP BY
            date_format(c.happen_time, '%c'),
            a.system_code
    </select>
    <select id="deviceTypeFault" resultType="com.aiurt.modules.subsystem.dto.ListDTO">
        SELECT
            a.`code`,a.name,
            IFNULL(SUM(c.duration),0)  as num,
            date_format(c.happen_time, '%c') MONTH
        FROM
            device a
                LEFT JOIN fault_device fd on fd.device_code =a.`code`
                LEFT JOIN fault c ON c.`code` =fd.fault_code and c.hang_up_time is null
                AND c.`status` > 2
                AND DATE_FORMAT(c.happen_time, '%Y-%m-%d') >= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -11 YEAR_MONTH), '%Y-%m-01')

        WHERE
            a.del_flag = 0
          and  a.system_code = #{code}
          and a.device_type_code = #{deviceTypeCode}
<!--        and not EXISTS (select 1 from operation_process where fault_code = c.code and  process_code = 10)-->
        GROUP BY
            date_format(c.happen_time, '%c'),
            a.`code`
    </select>
    <select id="getSystemByCodeDTO" resultType="com.aiurt.modules.subsystem.dto.SystemByCodeDTO">
        SELECT aa.system_name,aa.system_code,aa.description,
               SUM(aa.repairNum) as repairNum,
               aa.repairTime FROM (
              select s.system_name,s.system_code,s.description,
                     count(fr.end_time or not null) as repairNum,
                     fr.end_time as repairTime
              from cs_subsystem s
                       left join fault f on f.sub_system_code=s.system_code
                       left join fault_repair_record fr on fr.fault_code = f.code  and fr.del_flag=0
              where  s.del_flag =0 and s.system_code = #{subsystemCode}
              GROUP BY fr.id
              ORDER BY fr.end_time desc)aa
    </select>
    <select id="getReplacementNum" resultType="java.lang.Integer">
        SELECT
            IFNULL(SUM(t6.new_spare_part_num),0)  as sum
        FROM
            spare_part_out_order spare_part_out_order
                LEFT JOIN material_base t1 ON spare_part_out_order.material_code = t1.CODE
                LEFT JOIN cs_major cs_major ON t1.major_code = cs_major.major_code
                LEFT JOIN cs_subsystem cs_subsystem ON t1.system_code = cs_subsystem.system_code
                LEFT JOIN material_base_type t4 ON t1.base_type_code = t4.base_type_code
                LEFT JOIN device_change_spare_part t6 ON t6.out_order_id = spare_part_out_order.id
        where
            spare_part_out_order.del_flag =0
          and cs_subsystem.system_code = #{subsystemCode}
    </select>
    <select id="selectSubSystem" resultType="com.aiurt.modules.subsystem.dto.SubsystemFaultDTO">
        select s.system_name,s.system_code,s.id
        from  cs_subsystem s
        where s.del_flag =0 and s.system_code = #{subsystemCode.systemCode}
    </select>
    <select id="getSubsystemFilterFaultDTO" resultType="java.lang.Integer">
        SELECT
    IFNULL(SUM(fa.fault_duration),0)  as num
    FROM cs_subsystem ss
    LEFT JOIN fault fa on fa.sub_system_code = ss.system_code and fa.hang_up_time is null
    LEFT JOIN fault_level fl on fa.fault_level = fl.`code` and fl.del_flag = 0
    WHERE
    ss.del_flag =0
    AND ss.system_code = #{subsystemCode}
    AND date_format(fa.happen_time ,'%Y-%m') = date_format( #{time},'%Y-%m')
<!--    and not EXISTS (select 1 from operation_process where fault_code = fa.code and  process_code = 10)-->
    AND fa.status>2
</select>
<select id="getFilterNum" resultType="java.lang.Integer">
   select IFNULL(sum(aa.num),0)  from (SELECT
                                    IFNULL(SUM(fa.fault_duration),0)  as num
                                FROM  device de
                                          LEFT JOIN fault_device fd on de.`code` = fd.device_code
                                          LEFT JOIN fault fa on  fd.fault_code =fa.`code` and fa.hang_up_time is null
        WHERE
            fd.del_flag =0
        <!--and not EXISTS (select 1 from operation_process where fault_code = fa.code and  process_code = 10)-->
          AND fa.sub_system_code = #{subsystemCode}
          and de.device_type_code = #{deviceTypeCode}
          AND date_format(fa.approval_pass_time ,'%Y-%m') = date_format( #{time},'%Y-%m')
        group by fa.id) aa
</select>

<select id="sysTemYearAllFault" resultType="com.aiurt.modules.subsystem.dto.ListDTO">
    SELECT
    a.system_name AS NAME,
    a.system_code AS CODE,
    IFNULL(SUM(c.fault_duration),0)  as num,
    date_format(c.happen_time, '%c') MONTH
    FROM
    cs_subsystem a
    LEFT JOIN fault c ON a.system_code = c.sub_system_code
    AND c.`status` > 2
    AND DATE_FORMAT(c.happen_time, '%Y-%m-%d') >= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -11 YEAR_MONTH), '%Y-%m-01')
    WHERE
    a.del_flag = 0
    and  a.system_code = #{systemCode}
    GROUP BY
    date_format(c.happen_time, '%c'),
    a.system_code
    </select>
</mapper>
