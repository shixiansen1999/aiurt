<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiurt.boot.task.mapper.PatrolCheckResultMapper">

    <insert id="addResultList" parameterType="java.util.List">

        INSERT INTO patrol_check_result
        ( id, task_standard_id, task_device_id, `code`, content, quality_standard, hierarchy_type,
        old_id, parent_id, `order`, `check`, check_result, input_type, dict_code, option_value, write_value,
        regular, required, del_flag, create_by, create_time, update_by, update_time )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.id,jdbcType=VARCHAR},
            #{item.taskStandardId,jdbcType=VARCHAR},
            #{item.taskDeviceId,jdbcType=VARCHAR},
            #{item.code,jdbcType=VARCHAR},
            #{item.content,jdbcType=VARCHAR},
            #{item.qualityStandard,jdbcType=VARCHAR},
            #{item.hierarchyType,jdbcType=TINYINT},
            #{item.oldId,jdbcType=VARCHAR},
            #{item.parentId,jdbcType=VARCHAR},
            #{item.order,jdbcType=INTEGER},
            #{item.check,jdbcType=TINYINT},
            #{item.checkResult,jdbcType=TINYINT},
            #{item.inputType,jdbcType=TINYINT},
            #{item.dictCode,jdbcType=VARCHAR},
            #{item.optionValue,jdbcType=TINYINT},
            #{item.writeValue,jdbcType=VARCHAR},
            #{item.regular,jdbcType=VARCHAR},
            #{item.required,jdbcType=TINYINT},
            #{item.delFlag,jdbcType=TINYINT},
            #{item.createBy,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateBy,jdbcType=VARCHAR},
            #{item.updateTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>


    <select id="getListByTaskDeviceId" resultType="com.aiurt.boot.task.dto.PatrolCheckResultDTO">
        SELECT
        pcr.*
        FROM
        patrol_check_result pcr
        WHERE
        pcr.del_flag =0
        <if test="taskDeviceId != null and taskDeviceId !=''">
            and task_device_id = #{taskDeviceId}
        </if>
        order by pcr.order
    </select>
    <select id="getCheckResult" resultType="com.aiurt.boot.task.dto.PatrolCheckResultDTO">
    select t1.*
    from patrol_check_result t1
    where t1.task_device_id = #{taskDeviceId}
    order by t1.order
    </select>

    <select id="getCheckByTaskDeviceId" resultType="com.aiurt.boot.task.dto.PatrolCheckResultDTO">
        SELECT
        pcr.user_id,
        pcr.content,
        pcr.quality_standard,
        pcr.check_result,
        pcr.remark
        FROM
        patrol_check_result pcr
        WHERE
        pcr.del_flag =0
        and pcr.`check` = 1
        <if test="taskDeviceId != null and taskDeviceId !=''">
            and task_device_id = #{taskDeviceId}
        </if>
        order by pcr.order,pcr.code
    </select>
    <select id="getCheckByTaskDeviceIdAndParent" resultType="com.aiurt.boot.task.dto.PatrolCheckResultDTO">
        SELECT
        pcr.old_id,
        pcr.user_id,
        pcr.content,
        pcr.quality_standard,
        pcr.check_result,
        pcr.remark
        FROM
        patrol_check_result pcr
        WHERE
        pcr.del_flag =0
        and pcr.`check` = 0
        AND pcr.task_device_id IN (
        SELECT  ptd.id   FROM
        patrol_task_device ptd
        WHERE  ptd.del_flag = 0
        <if test="collect !=null and collect.size>0">
            and ptd.patrol_number in
            <foreach collection="collect" item="collect" open="(" close=")" separator=",">
                #{collect}
            </foreach>
        </if>)
        order by pcr.content,pcr.order
    </select>
    <select id="getQualityStandard" resultType="com.aiurt.boot.task.dto.PatrolCheckResultDTO">
        SELECT
        pcr.old_id,
        pcr.user_id,
        pcr.content,
        pcr.quality_standard,
        pcr.check_result,
        pcr.remark,
        css.system_name as subsystemName
        FROM
        patrol_check_result pcr
        LEFT JOIN patrol_task_device ptd ON pcr.task_device_id = ptd.id
        LEFT JOIN patrol_task_standard pts ON ptd.task_standard_id = pts.id
        AND pts.del_flag = 0
        LEFT JOIN cs_subsystem css ON css.system_code = pts.subsystem_code
        AND css.del_flag = 0
        WHERE
        pcr.del_flag = 0
        AND pcr.`check` = 1
        AND pcr.task_device_id IN (
        SELECT  ptd.id   FROM
        patrol_task_device ptd
        WHERE  ptd.del_flag = 0
        <if test="collect !=null and collect.size>0">
        and ptd.patrol_number in
        <foreach collection="collect" item="collect" open="(" close=")" separator=",">
            #{collect}
        </foreach>
        </if>)
        <if test="parentId != null and parentId !=''">
            and parent_id = #{parentId}
        </if>
        GROUP BY  pcr.id
        ORDER BY pts.subsystem_code,pcr.content,pcr.ORDER
    </select>

    <select id="getCheckResultAllByTaskId" resultType="com.aiurt.boot.task.dto.PatrolCheckResultDTO">
        SELECT
        pcr.old_id,
        pcr.user_id,
        pcr.content,
        pcr.quality_standard,
        pcr.check_result,
        pcr.remark,
        pcr.`check`,
        ps.`code` as oldCode,
        pcr.parent_id
        FROM
        patrol_check_result pcr
        LEFT JOIN patrol_standard_items ps on pcr.old_id = ps.id
        WHERE
        pcr.del_flag =0
        AND pcr.task_device_id IN (
        SELECT  ptd.id   FROM
        patrol_task_device ptd
        WHERE  ptd.del_flag = 0
        <if test="collect !=null and collect.size>0">
            and ptd.patrol_number in
            <foreach collection="collect" item="collect" open="(" close=")" separator=",">
                #{collect}
            </foreach>
        </if>)
    </select>
</mapper>
